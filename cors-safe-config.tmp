// CONFIGURACIÃ“N CORS SEGURA - Reemplazar en src/app.ts (lÃ­neas 42-61)
app.use(cors({
  origin: function (origin, callback) {
    // Lista de orÃ­genes permitidos (agregar dominios del frontend actual)
    const allowedOrigins = [
      'http://localhost:3008',  // Frontend desarrollo
      'http://localhost:3000',  // Backend desarrollo
      'http://192.168.1.60:3008',  // IP local frontend
      'http://192.168.1.60:3000',  // IP local backend
      // Agregar aquÃ­ los dominios de producciÃ³n cuando se conozcan
    ];
    
    // Permitir requests sin origin (herramientas de desarrollo)
    if (!origin) return callback(null, true);
    
    // Verificar si el origen estÃ¡ en la lista permitida
    if (allowedOrigins.indexOf(origin) !== -1) {
      return callback(null, true);
    } else {
      console.log('ðŸš¨ CORS: Origen no permitido:', origin);
      return callback(new Error('No permitido por CORS'), false);
    }
  },
  credentials: true,
  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'],
  allowedHeaders: [
    'Origin',
    'X-Requested-With',
    'Content-Type',
    'Accept',
    'Authorization',
    'Cache-Control',
    'X-HTTP-Method-Override'
  ],
  exposedHeaders: ['Authorization'],
  optionsSuccessStatus: 200,
  preflightContinue: false
}));
