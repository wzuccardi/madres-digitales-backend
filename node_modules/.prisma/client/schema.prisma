generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Municipio {
  id                  String          @id @default(cuid())
  nombre              String
  departamento        String
  codigo_dane         String?
  latitud             Decimal?        @db.Decimal(10, 8)
  longitud            Decimal?        @db.Decimal(11, 8)
  poblacion           Int?
  area_km2            Decimal?        @db.Decimal(10, 2)
  altitud_msnm        Int?
  es_capital          Boolean         @default(false)
  activo              Boolean         @default(true)
  fecha_creacion      DateTime        @default(now())
  fecha_actualizacion DateTime        @updatedAt
  gestantes           Gestante[]      @relation("MunicipioGestantes")
  ips                 IPS[]           @relation("MunicipioIPS")
  medicos             Medico[]        @relation("MunicipioMedicos")
  usuarios            Usuario[]       @relation("MunicipioUsuarios")
  zonas_cobertura     ZonaCobertura[] @relation("MunicipioZonas")

  @@map("municipios")
}

model Usuario {
  id                  String     @id @default(cuid())
  nombre              String
  email               String     @unique
  password_hash       String
  documento           String?
  tipo_documento      String?    @default("cedula")
  rol                 String
  municipio_id        String?
  telefono            String?
  activo              Boolean    @default(true)
  ultimo_acceso       DateTime?
  refresh_token       String?
  fecha_creacion      DateTime   @default(now())
  fecha_actualizacion DateTime   @updatedAt
  alertasGeneradas    Alerta[]   @relation("AlertasGeneradas")
  gestantesAsignadas  Gestante[] @relation("MadrinaGestantes")
  municipio           Municipio? @relation("MunicipioUsuarios", fields: [municipio_id], references: [id])

  @@map("usuarios")
}

model IPS {
  id                  String     @id @default(cuid())
  nombre              String
  nit                 String?
  telefono            String?
  direccion           String?
  municipio_id        String?
  nivel               String?
  email               String?
  activo              Boolean    @default(true)
  fecha_creacion      DateTime   @default(now())
  fecha_actualizacion DateTime   @updatedAt
  latitud             Decimal?   @db.Decimal(10, 8)
  longitud            Decimal?   @db.Decimal(11, 8)
  gestantes           Gestante[] @relation("IPSGestantes")
  municipio           Municipio? @relation("MunicipioIPS", fields: [municipio_id], references: [id])
  medicos             Medico[]   @relation("IPSMedicos")

  @@map("ips")
}

model Medico {
  id                  String     @id @default(cuid())
  nombre              String
  documento           String?
  telefono            String?
  especialidad        String?
  email               String?
  registro_medico     String?
  ips_id              String?
  municipio_id        String?
  activo              Boolean    @default(true)
  fecha_creacion      DateTime   @default(now())
  fecha_actualizacion DateTime   @updatedAt
  tipo_documento      String?    @default("cedula")
  controlesRealizados Control[]  @relation("MedicoControles")
  gestantes           Gestante[] @relation("MedicoGestantes")
  ips                 IPS?       @relation("IPSMedicos", fields: [ips_id], references: [id])
  municipio           Municipio? @relation("MunicipioMedicos", fields: [municipio_id], references: [id])

  @@map("medicos")
}

model Gestante {
  id                        String                  @id @default(cuid())
  documento                 String?
  tipo_documento            String?
  nombre                    String
  fecha_nacimiento          DateTime
  telefono                  String?
  direccion                 String?
  coordenadas               Json?
  fecha_ultima_menstruacion DateTime?
  fecha_probable_parto      DateTime?
  eps                       String?
  regimen_salud             String
  municipio_id              String?
  madrina_id                String?
  medico_tratante_id        String?
  ips_asignada_id           String?
  activa                    Boolean                 @default(true)
  fecha_creacion            DateTime                @default(now())
  fecha_actualizacion       DateTime                @updatedAt
  riesgo_alto               Boolean                 @default(false)
  alertas                   Alerta[]
  contactosEmergencia       ContactoEmergencia[]    @relation("ContactosEmergencia")
  controles                 Control[]
  ips_asignada              IPS?                    @relation("IPSGestantes", fields: [ips_asignada_id], references: [id])
  madrina                   Usuario?                @relation("MadrinaGestantes", fields: [madrina_id], references: [id])
  medico_tratante           Medico?                 @relation("MedicoGestantes", fields: [medico_tratante_id], references: [id])
  municipio                 Municipio?              @relation("MunicipioGestantes", fields: [municipio_id], references: [id])
  seguimientosEmergencia    SeguimientoEmergencia[] @relation("SeguimientosGestante")

  @@map("gestantes")
}

model Control {
  id                      String    @id @default(cuid())
  gestante_id             String
  medico_id               String?
  fecha_control           DateTime
  semanas_gestacion       Int?
  peso                    Float?
  altura_uterina          Float?
  presion_sistolica       Int?
  presion_diastolica      Int?
  frecuencia_cardiaca     Int?
  frecuencia_respiratoria Int?
  temperatura             Float?
  movimientos_fetales     String?
  edemas                  String?
  proteinuria             String?
  glucosuria              String?
  hallazgos               Json?
  recomendaciones         String?
  proximo_control         DateTime?
  realizado               Boolean   @default(false)
  fecha_creacion          DateTime  @default(now())
  fecha_actualizacion     DateTime  @updatedAt
  gestante                Gestante  @relation(fields: [gestante_id], references: [id], onDelete: Cascade)
  medico                  Medico?   @relation("MedicoControles", fields: [medico_id], references: [id])

  @@map("controles")
}

model ControlPrenatal {
  id                      String    @id @default(cuid())
  gestante_id             String
  medico_id               String?
  fecha_control           DateTime
  semanas_gestacion       Int?
  peso                    Float?
  altura_uterina          Float?
  presion_sistolica       Int?
  presion_diastolica      Int?
  frecuencia_cardiaca     Int?
  frecuencia_respiratoria Int?
  temperatura             Float?
  movimientos_fetales     String?
  edemas                  String?
  proteinuria             String?
  glucosuria              String?
  hallazgos               Json?
  recomendaciones         String?
  proximo_control         DateTime?
  realizado               Boolean   @default(false)
  observaciones           String?
  examenes_solicitados    Json?
  resultados_examenes     Json?
  fecha_creacion          DateTime  @default(now())
  fecha_actualizacion     DateTime  @updatedAt

  @@map("control_prenatal")
}

model Alerta {
  id                  String                  @id @default(cuid())
  gestante_id         String
  madrina_id          String?
  medico_asignado_id  String?
  ips_derivada_id     String?
  tipo_alerta         String
  nivel_prioridad     String
  mensaje             String
  sintomas            Json?
  coordenadas_alerta  Json?
  resuelta            Boolean                 @default(false)
  fecha_resolucion    DateTime?
  generado_por_id     String?
  fecha_creacion      DateTime                @default(now())
  fecha_actualizacion DateTime                @updatedAt
  created_at          DateTime                @default(now())
  estado              String?                 @default("pendiente")
  es_automatica       Boolean                 @default(false)
  score_riesgo        Int?
  gestante            Gestante                @relation(fields: [gestante_id], references: [id], onDelete: Cascade)
  madrina             Usuario?                @relation("AlertasGeneradas", fields: [madrina_id], references: [id])
  seguimientos        SeguimientoEmergencia[] @relation("SeguimientosEmergencia")

  @@map("alertas")
}

model ContactoEmergencia {
  id                  String   @id @default(cuid())
  gestante_id         String
  nombre              String
  parentesco          String?
  telefono            String
  email               String?
  activo              Boolean  @default(true)
  fecha_creacion      DateTime @default(now())
  fecha_actualizacion DateTime @updatedAt
  gestante            Gestante @relation("ContactosEmergencia", fields: [gestante_id], references: [id], onDelete: Cascade)

  @@map("contactos_emergencia")
}

model SeguimientoEmergencia {
  id                      String   @id @default(cuid())
  alerta_id               String
  gestante_id             String
  tipo                    String
  estado                  String
  notificaciones_enviadas Int      @default(0)
  detalles_notificaciones Json?
  observaciones           String?
  fecha_creacion          DateTime @default(now())
  fecha_actualizacion     DateTime @updatedAt
  alerta                  Alerta   @relation("SeguimientosEmergencia", fields: [alerta_id], references: [id], onDelete: Cascade)
  gestante                Gestante @relation("SeguimientosGestante", fields: [gestante_id], references: [id], onDelete: Cascade)

  @@map("seguimiento_emergencia")
}

model Contenido {
  id                         String              @id @default(cuid())
  titulo                     String
  descripcion                String?
  categoria                  String
  url_contenido              String?
  url_imagen                 String?
  duracion_minutos           Int?
  activo                     Boolean             @default(true)
  fecha_creacion             DateTime            @default(now())
  fecha_actualizacion        DateTime            @updatedAt
  destacado                  Boolean             @default(false)
  destacadoEnSemanaGestacion Boolean?            @default(false)
  nivel                      String?
  semana_gestacion_fin       Int?
  semana_gestacion_inicio    Int?
  tags                       Json?
  tipo                       String
  url_video                  String?
  progresos                  ProgresoContenido[]

  @@map("contenidos")
}

model ProgresoContenido {
  id                  String    @id @default(cuid())
  usuario_id          String
  contenido_id        String
  completado          Boolean   @default(false)
  porcentaje_progreso Int       @default(0)
  tiempo_visto        Int?
  fecha_inicio        DateTime?
  fecha_completado    DateTime?
  fecha_creacion      DateTime  @default(now())
  fecha_actualizacion DateTime  @updatedAt
  contenido           Contenido @relation(fields: [contenido_id], references: [id], onDelete: Cascade)

  @@unique([usuario_id, contenido_id])
  @@map("progreso_contenido")
}

model Log {
  id             String   @id @default(cuid())
  tipo           String
  mensaje        String
  datos          Json?
  nivel          String
  usuario_id     String?
  fecha_creacion DateTime @default(now())

  @@map("logs")
}

model RefreshToken {
  id         String    @id @default(cuid())
  token      String    @unique
  usuario_id String
  device_id  String?
  expires_at DateTime
  revoked    Boolean   @default(false)
  revoked_at DateTime?
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt

  @@map("refresh_tokens")
}

model Dispositivo {
  id                  String    @id @default(cuid())
  usuario_id          String
  device_id           String    @unique
  device_name         String?
  platform            String?
  app_version         String?
  last_sync           DateTime?
  activo              Boolean   @default(true)
  fecha_creacion      DateTime  @default(now())
  fecha_actualizacion DateTime  @updatedAt

  @@map("dispositivos")
}

model SyncLog {
  id             String    @id @default(cuid())
  usuario_id     String?
  device_id      String?
  tipo_operacion String
  entidad        String
  entidad_id     String?
  estado         String
  detalles       Json?
  error_message  String?
  fecha_inicio   DateTime  @default(now())
  fecha_fin      DateTime?
  duracion_ms    Int?

  @@map("sync_logs")
}

model SyncQueue {
  id                  String    @id @default(cuid())
  usuario_id          String
  device_id           String
  entidad             String
  entidad_id          String
  operacion           String
  datos               Json
  prioridad           Int       @default(1)
  intentos            Int       @default(0)
  max_intentos        Int       @default(3)
  estado              String    @default("pending")
  error_message       String?
  fecha_creacion      DateTime  @default(now())
  fecha_procesamiento DateTime?

  @@map("sync_queue")
}

model SyncConflict {
  id               String    @id @default(cuid())
  entidad          String
  entidad_id       String
  usuario_id       String
  device_id        String
  datos_local      Json
  datos_servidor   Json
  tipo_conflicto   String
  estado           String    @default("pending")
  resolucion       Json?
  fecha_creacion   DateTime  @default(now())
  fecha_resolucion DateTime?

  @@map("sync_conflicts")
}

model EntityVersion {
  id                  String   @id @default(cuid())
  entidad             String
  entidad_id          String
  version             Int      @default(1)
  checksum            String?
  fecha_creacion      DateTime @default(now())
  fecha_actualizacion DateTime @updatedAt

  @@unique([entidad, entidad_id])
  @@map("entity_versions")
}

model ZonaCobertura {
  id                   String     @id @default(cuid())
  nombre               String
  descripcion          String?
  tipo                 String
  centro_latitud       Decimal?   @db.Decimal(10, 8)
  centro_longitud      Decimal?   @db.Decimal(11, 8)
  radio_km             Float?
  coordenadas_poligono Json?
  municipio_id         String?
  activa               Boolean    @default(true)
  fecha_creacion       DateTime   @default(now())
  fecha_actualizacion  DateTime   @updatedAt
  municipio            Municipio? @relation("MunicipioZonas", fields: [municipio_id], references: [id])

  @@map("zonas_cobertura")
}

model Conversacion {
  id                   String    @id @default(cuid())
  tipo                 String
  nombre               String?
  descripcion          String?
  participantes        Json
  activa               Boolean   @default(true)
  ultimo_mensaje_id    String?
  fecha_ultimo_mensaje DateTime?
  fecha_creacion       DateTime  @default(now())
  fecha_actualizacion  DateTime  @updatedAt
  mensajes             Mensaje[]

  @@map("conversaciones")
}

model Mensaje {
  id                  String       @id @default(cuid())
  conversacion_id     String
  remitente_id        String
  contenido           String
  tipo                String       @default("texto")
  archivo_url         String?
  metadata            Json?
  leido               Boolean      @default(false)
  fecha_lectura       DateTime?
  fecha_creacion      DateTime     @default(now())
  fecha_actualizacion DateTime     @updatedAt
  conversacion        Conversacion @relation(fields: [conversacion_id], references: [id], onDelete: Cascade)

  @@map("mensajes")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
}

enum AlertaTipo {
  SOS
  MEDICA
  CONTROL
  RECORDATORIO
  HIPERTENSION
  PREECLAMPSIA
  DIABETES
  SANGRADO
  CONTRACCIONES
  FALTA_MOVIMIENTO_FETAL

  @@map("alerta_tipo")
}

enum PrioridadNivel {
  BAJA
  MEDIA
  ALTA
  CRITICA

  @@map("prioridad_nivel")
}

enum TipoContenido {
  VIDEO
  ARTICULO
  INFOGRAFIA
  PODCAST
  EJERCICIO
  RECETA

  @@map("tipo_contenido")
}

enum CategoriaContenido {
  NUTRICION
  EJERCICIO
  CUIDADOS_PRENATALES
  PREPARACION_PARTO
  LACTANCIA
  CUIDADOS_BEBE
  SALUD_MENTAL
  EMERGENCIAS

  @@map("categoria_contenido")
}

enum NivelDificultad {
  BASICO
  INTERMEDIO
  AVANZADO

  @@map("nivel_dificultad")
}
