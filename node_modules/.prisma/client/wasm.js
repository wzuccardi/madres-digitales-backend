
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.22.0
 * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
 */
Prisma.prismaVersion = {
  client: "5.22.0",
  engine: "605197351a3c8bdd595af2d2a9bc3025bca48ea2"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.MunicipioScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  departamento: 'departamento',
  codigo_dane: 'codigo_dane',
  latitud: 'latitud',
  longitud: 'longitud',
  poblacion: 'poblacion',
  area_km2: 'area_km2',
  altitud_msnm: 'altitud_msnm',
  es_capital: 'es_capital',
  activo: 'activo',
  fecha_creacion: 'fecha_creacion',
  fecha_actualizacion: 'fecha_actualizacion'
};

exports.Prisma.UsuarioScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  email: 'email',
  password_hash: 'password_hash',
  documento: 'documento',
  tipo_documento: 'tipo_documento',
  rol: 'rol',
  municipio_id: 'municipio_id',
  telefono: 'telefono',
  activo: 'activo',
  ultimo_acceso: 'ultimo_acceso',
  refresh_token: 'refresh_token',
  fecha_creacion: 'fecha_creacion',
  fecha_actualizacion: 'fecha_actualizacion'
};

exports.Prisma.IPSScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  nit: 'nit',
  telefono: 'telefono',
  direccion: 'direccion',
  municipio_id: 'municipio_id',
  nivel: 'nivel',
  email: 'email',
  activo: 'activo',
  fecha_creacion: 'fecha_creacion',
  fecha_actualizacion: 'fecha_actualizacion',
  latitud: 'latitud',
  longitud: 'longitud'
};

exports.Prisma.MedicoScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  documento: 'documento',
  telefono: 'telefono',
  especialidad: 'especialidad',
  email: 'email',
  registro_medico: 'registro_medico',
  ips_id: 'ips_id',
  municipio_id: 'municipio_id',
  activo: 'activo',
  fecha_creacion: 'fecha_creacion',
  fecha_actualizacion: 'fecha_actualizacion',
  tipo_documento: 'tipo_documento'
};

exports.Prisma.GestanteScalarFieldEnum = {
  id: 'id',
  documento: 'documento',
  tipo_documento: 'tipo_documento',
  nombre: 'nombre',
  fecha_nacimiento: 'fecha_nacimiento',
  telefono: 'telefono',
  direccion: 'direccion',
  coordenadas: 'coordenadas',
  fecha_ultima_menstruacion: 'fecha_ultima_menstruacion',
  fecha_probable_parto: 'fecha_probable_parto',
  eps: 'eps',
  regimen_salud: 'regimen_salud',
  municipio_id: 'municipio_id',
  madrina_id: 'madrina_id',
  medico_tratante_id: 'medico_tratante_id',
  ips_asignada_id: 'ips_asignada_id',
  activa: 'activa',
  fecha_creacion: 'fecha_creacion',
  fecha_actualizacion: 'fecha_actualizacion',
  riesgo_alto: 'riesgo_alto'
};

exports.Prisma.ControlScalarFieldEnum = {
  id: 'id',
  gestante_id: 'gestante_id',
  medico_id: 'medico_id',
  fecha_control: 'fecha_control',
  semanas_gestacion: 'semanas_gestacion',
  peso: 'peso',
  altura_uterina: 'altura_uterina',
  presion_sistolica: 'presion_sistolica',
  presion_diastolica: 'presion_diastolica',
  frecuencia_cardiaca: 'frecuencia_cardiaca',
  frecuencia_respiratoria: 'frecuencia_respiratoria',
  temperatura: 'temperatura',
  movimientos_fetales: 'movimientos_fetales',
  edemas: 'edemas',
  proteinuria: 'proteinuria',
  glucosuria: 'glucosuria',
  hallazgos: 'hallazgos',
  recomendaciones: 'recomendaciones',
  proximo_control: 'proximo_control',
  realizado: 'realizado',
  fecha_creacion: 'fecha_creacion',
  fecha_actualizacion: 'fecha_actualizacion'
};

exports.Prisma.ControlPrenatalScalarFieldEnum = {
  id: 'id',
  gestante_id: 'gestante_id',
  medico_id: 'medico_id',
  fecha_control: 'fecha_control',
  semanas_gestacion: 'semanas_gestacion',
  peso: 'peso',
  altura_uterina: 'altura_uterina',
  presion_sistolica: 'presion_sistolica',
  presion_diastolica: 'presion_diastolica',
  frecuencia_cardiaca: 'frecuencia_cardiaca',
  frecuencia_respiratoria: 'frecuencia_respiratoria',
  temperatura: 'temperatura',
  movimientos_fetales: 'movimientos_fetales',
  edemas: 'edemas',
  proteinuria: 'proteinuria',
  glucosuria: 'glucosuria',
  hallazgos: 'hallazgos',
  recomendaciones: 'recomendaciones',
  proximo_control: 'proximo_control',
  realizado: 'realizado',
  observaciones: 'observaciones',
  examenes_solicitados: 'examenes_solicitados',
  resultados_examenes: 'resultados_examenes',
  fecha_creacion: 'fecha_creacion',
  fecha_actualizacion: 'fecha_actualizacion'
};

exports.Prisma.AlertaScalarFieldEnum = {
  id: 'id',
  gestante_id: 'gestante_id',
  madrina_id: 'madrina_id',
  medico_asignado_id: 'medico_asignado_id',
  ips_derivada_id: 'ips_derivada_id',
  tipo_alerta: 'tipo_alerta',
  nivel_prioridad: 'nivel_prioridad',
  mensaje: 'mensaje',
  sintomas: 'sintomas',
  coordenadas_alerta: 'coordenadas_alerta',
  resuelta: 'resuelta',
  fecha_resolucion: 'fecha_resolucion',
  generado_por_id: 'generado_por_id',
  fecha_creacion: 'fecha_creacion',
  fecha_actualizacion: 'fecha_actualizacion',
  created_at: 'created_at',
  estado: 'estado',
  es_automatica: 'es_automatica',
  score_riesgo: 'score_riesgo'
};

exports.Prisma.ContactoEmergenciaScalarFieldEnum = {
  id: 'id',
  gestante_id: 'gestante_id',
  nombre: 'nombre',
  parentesco: 'parentesco',
  telefono: 'telefono',
  email: 'email',
  activo: 'activo',
  fecha_creacion: 'fecha_creacion',
  fecha_actualizacion: 'fecha_actualizacion'
};

exports.Prisma.SeguimientoEmergenciaScalarFieldEnum = {
  id: 'id',
  alerta_id: 'alerta_id',
  gestante_id: 'gestante_id',
  tipo: 'tipo',
  estado: 'estado',
  notificaciones_enviadas: 'notificaciones_enviadas',
  detalles_notificaciones: 'detalles_notificaciones',
  observaciones: 'observaciones',
  fecha_creacion: 'fecha_creacion',
  fecha_actualizacion: 'fecha_actualizacion'
};

exports.Prisma.ContenidoScalarFieldEnum = {
  id: 'id',
  titulo: 'titulo',
  descripcion: 'descripcion',
  categoria: 'categoria',
  url_contenido: 'url_contenido',
  url_imagen: 'url_imagen',
  duracion_minutos: 'duracion_minutos',
  activo: 'activo',
  fecha_creacion: 'fecha_creacion',
  fecha_actualizacion: 'fecha_actualizacion',
  destacado: 'destacado',
  destacadoEnSemanaGestacion: 'destacadoEnSemanaGestacion',
  nivel: 'nivel',
  semana_gestacion_fin: 'semana_gestacion_fin',
  semana_gestacion_inicio: 'semana_gestacion_inicio',
  tags: 'tags',
  tipo: 'tipo',
  url_video: 'url_video'
};

exports.Prisma.ProgresoContenidoScalarFieldEnum = {
  id: 'id',
  usuario_id: 'usuario_id',
  contenido_id: 'contenido_id',
  completado: 'completado',
  porcentaje_progreso: 'porcentaje_progreso',
  tiempo_visto: 'tiempo_visto',
  fecha_inicio: 'fecha_inicio',
  fecha_completado: 'fecha_completado',
  fecha_creacion: 'fecha_creacion',
  fecha_actualizacion: 'fecha_actualizacion'
};

exports.Prisma.LogScalarFieldEnum = {
  id: 'id',
  tipo: 'tipo',
  mensaje: 'mensaje',
  datos: 'datos',
  nivel: 'nivel',
  usuario_id: 'usuario_id',
  fecha_creacion: 'fecha_creacion'
};

exports.Prisma.RefreshTokenScalarFieldEnum = {
  id: 'id',
  token: 'token',
  usuario_id: 'usuario_id',
  device_id: 'device_id',
  expires_at: 'expires_at',
  revoked: 'revoked',
  revoked_at: 'revoked_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.DispositivoScalarFieldEnum = {
  id: 'id',
  usuario_id: 'usuario_id',
  device_id: 'device_id',
  device_name: 'device_name',
  platform: 'platform',
  app_version: 'app_version',
  last_sync: 'last_sync',
  activo: 'activo',
  fecha_creacion: 'fecha_creacion',
  fecha_actualizacion: 'fecha_actualizacion'
};

exports.Prisma.SyncLogScalarFieldEnum = {
  id: 'id',
  usuario_id: 'usuario_id',
  device_id: 'device_id',
  tipo_operacion: 'tipo_operacion',
  entidad: 'entidad',
  entidad_id: 'entidad_id',
  estado: 'estado',
  detalles: 'detalles',
  error_message: 'error_message',
  fecha_inicio: 'fecha_inicio',
  fecha_fin: 'fecha_fin',
  duracion_ms: 'duracion_ms'
};

exports.Prisma.SyncQueueScalarFieldEnum = {
  id: 'id',
  usuario_id: 'usuario_id',
  device_id: 'device_id',
  entidad: 'entidad',
  entidad_id: 'entidad_id',
  operacion: 'operacion',
  datos: 'datos',
  prioridad: 'prioridad',
  intentos: 'intentos',
  max_intentos: 'max_intentos',
  estado: 'estado',
  error_message: 'error_message',
  fecha_creacion: 'fecha_creacion',
  fecha_procesamiento: 'fecha_procesamiento'
};

exports.Prisma.SyncConflictScalarFieldEnum = {
  id: 'id',
  entidad: 'entidad',
  entidad_id: 'entidad_id',
  usuario_id: 'usuario_id',
  device_id: 'device_id',
  datos_local: 'datos_local',
  datos_servidor: 'datos_servidor',
  tipo_conflicto: 'tipo_conflicto',
  estado: 'estado',
  resolucion: 'resolucion',
  fecha_creacion: 'fecha_creacion',
  fecha_resolucion: 'fecha_resolucion'
};

exports.Prisma.EntityVersionScalarFieldEnum = {
  id: 'id',
  entidad: 'entidad',
  entidad_id: 'entidad_id',
  version: 'version',
  checksum: 'checksum',
  fecha_creacion: 'fecha_creacion',
  fecha_actualizacion: 'fecha_actualizacion'
};

exports.Prisma.ZonaCoberturaScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  descripcion: 'descripcion',
  tipo: 'tipo',
  centro_latitud: 'centro_latitud',
  centro_longitud: 'centro_longitud',
  radio_km: 'radio_km',
  coordenadas_poligono: 'coordenadas_poligono',
  municipio_id: 'municipio_id',
  activa: 'activa',
  fecha_creacion: 'fecha_creacion',
  fecha_actualizacion: 'fecha_actualizacion'
};

exports.Prisma.ConversacionScalarFieldEnum = {
  id: 'id',
  tipo: 'tipo',
  nombre: 'nombre',
  descripcion: 'descripcion',
  participantes: 'participantes',
  activa: 'activa',
  ultimo_mensaje_id: 'ultimo_mensaje_id',
  fecha_ultimo_mensaje: 'fecha_ultimo_mensaje',
  fecha_creacion: 'fecha_creacion',
  fecha_actualizacion: 'fecha_actualizacion'
};

exports.Prisma.MensajeScalarFieldEnum = {
  id: 'id',
  conversacion_id: 'conversacion_id',
  remitente_id: 'remitente_id',
  contenido: 'contenido',
  tipo: 'tipo',
  archivo_url: 'archivo_url',
  metadata: 'metadata',
  leido: 'leido',
  fecha_lectura: 'fecha_lectura',
  fecha_creacion: 'fecha_creacion',
  fecha_actualizacion: 'fecha_actualizacion'
};

exports.Prisma.Spatial_ref_sysScalarFieldEnum = {
  srid: 'srid',
  auth_name: 'auth_name',
  auth_srid: 'auth_srid',
  srtext: 'srtext',
  proj4text: 'proj4text'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  Municipio: 'Municipio',
  Usuario: 'Usuario',
  IPS: 'IPS',
  Medico: 'Medico',
  Gestante: 'Gestante',
  Control: 'Control',
  ControlPrenatal: 'ControlPrenatal',
  Alerta: 'Alerta',
  ContactoEmergencia: 'ContactoEmergencia',
  SeguimientoEmergencia: 'SeguimientoEmergencia',
  Contenido: 'Contenido',
  ProgresoContenido: 'ProgresoContenido',
  Log: 'Log',
  RefreshToken: 'RefreshToken',
  Dispositivo: 'Dispositivo',
  SyncLog: 'SyncLog',
  SyncQueue: 'SyncQueue',
  SyncConflict: 'SyncConflict',
  EntityVersion: 'EntityVersion',
  ZonaCobertura: 'ZonaCobertura',
  Conversacion: 'Conversacion',
  Mensaje: 'Mensaje',
  spatial_ref_sys: 'spatial_ref_sys'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
